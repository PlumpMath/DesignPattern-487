package strategy;

public class QuickSort implements Arrangement {

	int[] currentArray;

	@Override
	public int[] sort(int[] array) {
		// TODO Auto-generated method stub
		currentArray = array;
		quicksort(0, currentArray.length - 1);
		
		// Tráº£ láº¡i máº£ng sau khi Ä‘Ã£ sáº¯p xáº¿p
		return currentArray;
	}

	private void quicksort(int i, int j) {

		int left = i, right = j;
		
		// Láº¥y giÃ¡ trá»‹ giá»¯a máº£ng Ä‘á»ƒ so sÃ¡nh
		int pivot = currentArray[(i + j) / 2];
		int temp;
		
		// Náº¿u left < right thÃ¬ váº«n tiáº¿p tÃºc so sÃ¡nh
		while (left <= right) {
			
			// Náº¿u giÃ¡ trá»‹ left váº«n nhá»? hÆ¡n giÃ¡ tá»‹ pivot
			// TÄƒng left
			while (currentArray[left] < pivot)
				left++;
			
			// Náº¿u giÃ¡ trá»‹ right váº«n lá»›n hÆ¡n giÃ¡ tá»‹ pivot
			// Giáº£m right
			while (pivot < currentArray[right])
				right--;
			
			// Thay Ä‘á»•i vá»‹ trÃ­ 2 giÃ¡ trá»‹ vá»? vá»‹ trÃ­ Ä‘Ãºng cua nÃ³ 
			if (left <= right) {
				temp = currentArray[left];
				currentArray[left] = currentArray[right];
				currentArray[right] = temp;
				left++;
				right--;
			}
		}
		
		// Náº¿u Ä‘iá»?u kiá»‡n báº¥t biá»…n váº«n thá»?a mÃ£n
		// Chia thÃ nh 2 máº£ng nhá»? Ä‘á»ƒ tiáº¿p tá»¥c
		if (i < right)
			quicksort(left, j);
		if (left < j)
			quicksort(i, right);
	}
}
